// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DataContext;

namespace Project.Migrations
{
    [DbContext(typeof(WoodshopContext))]
    [Migration("20210416080854_addCustomer")]
    partial class addCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<Guid>("OrdersOrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrdersOrderId", "ProductsProductId");

                    b.HasIndex("ProductsProductId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            CompanyNumber = "0123456789"
                        });
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CustomerPersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerPersonId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Project.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            FirstName = "Jonas",
                            LastName = "De Meyer"
                        });
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Thickness")
                        .HasColumnType("float");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("259a2939-8309-4a83-a882-259ec81f0f6e"),
                            Name = "Oregon 7x15",
                            Price = 5.0099999999999998,
                            Thickness = 7.0,
                            UnitId = 1,
                            Width = 15.0
                        },
                        new
                        {
                            ProductId = new Guid("e687657c-81c9-4be9-b770-056395aaa8d9"),
                            Name = "Oregon 7x18",
                            Price = 4.6200000000000001,
                            Thickness = 7.0,
                            UnitId = 1,
                            Width = 18.0
                        },
                        new
                        {
                            ProductId = new Guid("daf92ab6-a022-458c-acaf-10b732d86f52"),
                            Name = "Pannelatten",
                            Price = 0.29999999999999999,
                            Thickness = 2.3999999999999999,
                            UnitId = 1,
                            Width = 3.2000000000000002
                        },
                        new
                        {
                            ProductId = new Guid("5365b52e-5100-4959-916c-b35c22fae462"),
                            Name = "Stoflatten",
                            Price = 0.22,
                            Thickness = 2.0,
                            UnitId = 1,
                            Width = 2.2999999999999998
                        },
                        new
                        {
                            ProductId = new Guid("14163d6b-4827-495e-b054-881063193672"),
                            Name = "RND gedrenkt",
                            Price = 0.84999999999999998,
                            Thickness = 2.5,
                            UnitId = 1,
                            Width = 10.0
                        },
                        new
                        {
                            ProductId = new Guid("f3017254-7bf8-4b08-b1df-35c3156fc0d4"),
                            Name = "RND ongeschaafd",
                            Price = 0.60999999999999999,
                            Thickness = 2.0,
                            UnitId = 1,
                            Width = 10.0
                        },
                        new
                        {
                            ProductId = new Guid("41453897-4b21-4f85-9ecc-868f759df221"),
                            Name = "Merantiplaten",
                            Price = 4.4500000000000002,
                            Thickness = 0.35999999999999999,
                            UnitId = 1,
                            Width = 122.0
                        },
                        new
                        {
                            ProductId = new Guid("39aa422a-e060-4164-9c88-5d6d8d03db8c"),
                            Name = "CDX platen",
                            Price = 6.5599999999999996,
                            Thickness = 1.8,
                            UnitId = 2,
                            Width = 122.0
                        },
                        new
                        {
                            ProductId = new Guid("3cf83168-f907-4ed3-8f2c-07c766151b08"),
                            Name = "OBS platen",
                            Price = 3.9700000000000002,
                            Thickness = 1.2,
                            UnitId = 2,
                            Width = 59.0
                        },
                        new
                        {
                            ProductId = new Guid("b7b8b431-7952-49b7-9f0e-40a7a91c2560"),
                            Name = "Meubelplaten wit",
                            Price = 5.6200000000000001,
                            Thickness = 1.0,
                            UnitId = 3,
                            Width = 20.0
                        },
                        new
                        {
                            ProductId = new Guid("61dd4f13-bfdf-4ac4-bb60-39c062cc503b"),
                            Name = "Gipsplaten",
                            Price = 2.6400000000000001,
                            Thickness = 0.90000000000000002,
                            UnitId = 2,
                            Width = 0.0
                        },
                        new
                        {
                            ProductId = new Guid("ea74f6bd-83a5-43fb-bbe2-54eb646c6a2c"),
                            Name = "Plafondlatten",
                            Price = 0.56999999999999995,
                            Thickness = 2.2000000000000002,
                            UnitId = 1,
                            Width = 4.5
                        },
                        new
                        {
                            ProductId = new Guid("e272383a-3b48-46bb-8638-76f233796680"),
                            Name = "CLS",
                            Price = 0.98999999999999999,
                            Thickness = 3.7999999999999998,
                            UnitId = 1,
                            Width = 5.7999999999999998
                        },
                        new
                        {
                            ProductId = new Guid("f645eef5-2fbf-4e94-ab54-5dff266cabfe"),
                            Name = "Terrasplanken tali",
                            Price = 6.3499999999999996,
                            Thickness = 2.5,
                            UnitId = 1,
                            Width = 14.5
                        },
                        new
                        {
                            ProductId = new Guid("1389cbe6-7513-44ab-a921-164013941ef6"),
                            Name = "Thermowood",
                            Price = 6.1500000000000004,
                            Thickness = 63.0,
                            UnitId = 1,
                            Width = 150.0
                        },
                        new
                        {
                            ProductId = new Guid("ad7a5fe6-5631-4f40-8c3a-0ebe6d9c1cde"),
                            Name = "Tali kepers",
                            Price = 2.8100000000000001,
                            Thickness = 40.0,
                            UnitId = 1,
                            Width = 55.0
                        });
                });

            modelBuilder.Entity("Project.Models.Staff", b =>
                {
                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Project.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitId = 1,
                            Desc = "Lopende meter",
                            Name = "lm"
                        },
                        new
                        {
                            UnitId = 2,
                            Desc = "Vierkante meter",
                            Name = "m²"
                        },
                        new
                        {
                            UnitId = 3,
                            Desc = "Kubieke meter",
                            Name = "m³"
                        },
                        new
                        {
                            UnitId = 4,
                            Desc = "Stuk",
                            Name = "st"
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Project.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.HasOne("Project.Models.Person", "Person")
                        .WithOne("Customer")
                        .HasForeignKey("Project.Models.Customer", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.HasOne("Project.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerPersonId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.HasOne("Project.Models.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Project.Models.Staff", b =>
                {
                    b.HasOne("Project.Models.Person", "Person")
                        .WithOne("Staff")
                        .HasForeignKey("Project.Models.Staff", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Project.Models.Person", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Project.Models.Unit", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
