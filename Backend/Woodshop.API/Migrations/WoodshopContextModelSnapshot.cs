// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.DataContext;

namespace Project.Migrations
{
    [DbContext(typeof(WoodshopContext))]
    partial class WoodshopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            CompanyNumber = "0123456789"
                        });
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Project.Models.OrderProduct", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPayed")
                        .HasColumnType("bit");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("Project.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 2,
                            FirstName = "Sander",
                            LastName = "Coussement"
                        },
                        new
                        {
                            PersonId = 1,
                            FirstName = "Jonas",
                            LastName = "De Meyer"
                        });
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Thickness")
                        .HasColumnType("float");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("64ef9d4b-8da2-48e9-962d-4b40b3c2860c"),
                            Name = "Oregon 7x15",
                            Price = 5.0099999999999998,
                            Thickness = 7.0,
                            UnitId = 1,
                            Width = 15.0
                        },
                        new
                        {
                            ProductId = new Guid("d65740a1-118f-426c-9187-be79efede89c"),
                            Name = "Oregon 7x18",
                            Price = 4.6200000000000001,
                            Thickness = 7.0,
                            UnitId = 1,
                            Width = 18.0
                        },
                        new
                        {
                            ProductId = new Guid("c7221e00-a802-4cd5-a4fc-e8650b1205ba"),
                            Name = "Pannelatten",
                            Price = 0.29999999999999999,
                            Thickness = 2.3999999999999999,
                            UnitId = 1,
                            Width = 3.2000000000000002
                        },
                        new
                        {
                            ProductId = new Guid("93d40bce-f5ef-4eef-9396-fd92be9793a7"),
                            Name = "Stoflatten",
                            Price = 0.22,
                            Thickness = 2.0,
                            UnitId = 1,
                            Width = 2.2999999999999998
                        },
                        new
                        {
                            ProductId = new Guid("e7991ffd-4c72-4adf-9a3c-c231d031898c"),
                            Name = "RND gedrenkt",
                            Price = 0.84999999999999998,
                            Thickness = 2.5,
                            UnitId = 1,
                            Width = 10.0
                        },
                        new
                        {
                            ProductId = new Guid("d58da81d-caa1-4549-b671-73936ed15e68"),
                            Name = "RND ongeschaafd",
                            Price = 0.60999999999999999,
                            Thickness = 2.0,
                            UnitId = 1,
                            Width = 10.0
                        },
                        new
                        {
                            ProductId = new Guid("fc08ca3c-66d8-4326-8d35-235bc9dd10e7"),
                            Name = "Merantiplaten",
                            Price = 4.4500000000000002,
                            Thickness = 0.35999999999999999,
                            UnitId = 1,
                            Width = 122.0
                        },
                        new
                        {
                            ProductId = new Guid("199f248d-83a0-4f93-939f-62785c3e0cc3"),
                            Name = "CDX platen",
                            Price = 6.5599999999999996,
                            Thickness = 1.8,
                            UnitId = 2,
                            Width = 122.0
                        },
                        new
                        {
                            ProductId = new Guid("865667c4-b7c3-4c2c-a029-c0eb7d189738"),
                            Name = "OBS platen",
                            Price = 3.9700000000000002,
                            Thickness = 1.2,
                            UnitId = 2,
                            Width = 59.0
                        },
                        new
                        {
                            ProductId = new Guid("d0f36653-7997-4227-9df3-44aa6925d722"),
                            Name = "Meubelplaten wit",
                            Price = 5.6200000000000001,
                            Thickness = 1.0,
                            UnitId = 3,
                            Width = 20.0
                        },
                        new
                        {
                            ProductId = new Guid("b9ca00f8-df63-4e96-a056-65c6f82ca005"),
                            Name = "Gipsplaten",
                            Price = 2.6400000000000001,
                            Thickness = 0.90000000000000002,
                            UnitId = 2,
                            Width = 0.0
                        },
                        new
                        {
                            ProductId = new Guid("10f97eb8-7f45-4dd3-b208-7cb06cb605cb"),
                            Name = "Plafondlatten",
                            Price = 0.56999999999999995,
                            Thickness = 2.2000000000000002,
                            UnitId = 1,
                            Width = 4.5
                        },
                        new
                        {
                            ProductId = new Guid("f6816871-9005-441a-89d8-0128b591c91f"),
                            Name = "CLS",
                            Price = 0.98999999999999999,
                            Thickness = 3.7999999999999998,
                            UnitId = 1,
                            Width = 5.7999999999999998
                        },
                        new
                        {
                            ProductId = new Guid("f1ce4ee5-bdbc-4c51-8843-d138b33db411"),
                            Name = "Terrasplanken tali",
                            Price = 6.3499999999999996,
                            Thickness = 2.5,
                            UnitId = 1,
                            Width = 14.5
                        },
                        new
                        {
                            ProductId = new Guid("2cb51452-4738-4dc4-878a-5a840f014b4c"),
                            Name = "Thermowood",
                            Price = 6.1500000000000004,
                            Thickness = 63.0,
                            UnitId = 1,
                            Width = 150.0
                        },
                        new
                        {
                            ProductId = new Guid("c35ea7cc-44a8-4cce-bc3c-c9d49cdc7a29"),
                            Name = "Tali kepers",
                            Price = 2.8100000000000001,
                            Thickness = 40.0,
                            UnitId = 1,
                            Width = 55.0
                        });
                });

            modelBuilder.Entity("Project.Models.Staff", b =>
                {
                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            PersonId = 2,
                            IsAdmin = true,
                            TelephoneNumber = "0412345678"
                        });
                });

            modelBuilder.Entity("Project.Models.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitId = 1,
                            Desc = "Lopende meter",
                            Name = "lm"
                        },
                        new
                        {
                            UnitId = 2,
                            Desc = "Vierkante meter",
                            Name = "m²"
                        },
                        new
                        {
                            UnitId = 3,
                            Desc = "Kubieke meter",
                            Name = "m³"
                        },
                        new
                        {
                            UnitId = 4,
                            Desc = "Stuk",
                            Name = "st"
                        });
                });

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.HasOne("Project.Models.Person", "Person")
                        .WithOne("Customer")
                        .HasForeignKey("Project.Models.Customer", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.HasOne("Project.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Project.Models.OrderProduct", b =>
                {
                    b.HasOne("Project.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.HasOne("Project.Models.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Project.Models.Staff", b =>
                {
                    b.HasOne("Project.Models.Person", "Person")
                        .WithOne("Staff")
                        .HasForeignKey("Project.Models.Staff", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Project.Models.Person", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Project.Models.Unit", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
